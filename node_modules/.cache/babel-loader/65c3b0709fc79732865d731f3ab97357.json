{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsarafa/Documents/ReactApp/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport { robots } from './Robots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  robots: robots,\n  searchfield: ''\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" RoboFriends! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: robots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App; //Use STATE to send data up to the parent to change things on the view. Simply an object.\n//State in this case is the robots and we are able to change what Robots array means. Props are simple things that come out of state\n// STATE >> props. Parent sends the STATE to the child compenant that cannot change it but updates the view.","map":{"version":3,"names":["React","Component","CardList","SearchBox","robots","state","searchfield","App","render"],"sources":["/Users/andrewsarafa/Documents/ReactApp/robofriends/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport {robots} from './Robots'\n\nconst state = {\n    robots: robots,\n    searchfield: ''\n};\n\nclass App extends Component {\n    render () {\n        return (\n            <div className='tc'>\n                <h1> RoboFriends! </h1>\n                <SearchBox />\n                <CardList robots={robots}/>\n            </div>\n        );\n        }\n}\n\nexport default App;\n\n//Use STATE to send data up to the parent to change things on the view. Simply an object.\n//State in this case is the robots and we are able to change what Robots array means. Props are simple things that come out of state\n// STATE >> props. Parent sends the STATE to the child compenant that cannot change it but updates the view. "],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAEA,MAAMC,KAAK,GAAG;EACVD,MAAM,EAAEA,MADE;EAEVE,WAAW,EAAE;AAFH,CAAd;;AAKA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;EACxBO,MAAM,GAAI;IACN,oBACI;MAAK,SAAS,EAAC,IAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,QAAD;QAAU,MAAM,EAAEJ;MAAlB;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOC;;AATmB;;AAY5B,eAAeG,GAAf,C,CAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}