{"ast":null,"code":"var _jsxFileName = \"/Users/andrewsarafa/Documents/ReactApp/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport { robots } from './Robots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: robots,\n      searchfield: ''\n    };\n  }\n\n  onSearchChange(event) {\n    console.log(event.target.value);\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" RoboFriends! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: this.state.robots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App; //Use STATE to send data up to the parent to change things on the view. Simply an object.\n//State in this case is the robots and we are able to change what Robots array means. Props are simple things that come out of state\n// STATE >> props. Parent sends the STATE to the child compenant that cannot change it but updates the view. \n// STATE is something that can change and change our app.\n//Event.target.value just gives the value for the event that is happening \n// Cardlist is being passed with the state and searchBox is being given the object of onSearchChange function to be passed.","map":{"version":3,"names":["React","Component","CardList","SearchBox","robots","App","constructor","state","searchfield","onSearchChange","event","console","log","target","value","filteredRobots","filter","name","toLowerCase","includes","render"],"sources":["/Users/andrewsarafa/Documents/ReactApp/robofriends/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport {robots} from './Robots'\n\nclass App extends Component {\n    constructor() { \n        super()\n        this.state = {\n            robots: robots,\n            searchfield: ''\n        }\n    }\n\n    onSearchChange(event) {\n        console.log(event.target.value);\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n    }\n\n    render () {\n        return (\n            <div className='tc'>\n                <h1> RoboFriends! </h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <CardList robots={this.state.robots}/>\n            </div>\n        );\n        }\n}\n\nexport default App;\n\n//Use STATE to send data up to the parent to change things on the view. Simply an object.\n//State in this case is the robots and we are able to change what Robots array means. Props are simple things that come out of state\n// STATE >> props. Parent sends the STATE to the child compenant that cannot change it but updates the view. \n// STATE is something that can change and change our app.\n//Event.target.value just gives the value for the event that is happening \n// Cardlist is being passed with the state and searchBox is being given the object of onSearchChange function to be passed."],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;EACxBK,WAAW,GAAG;IACV;IACA,KAAKC,KAAL,GAAa;MACTH,MAAM,EAAEA,MADC;MAETI,WAAW,EAAE;IAFJ,CAAb;EAIH;;EAEDC,cAAc,CAACC,KAAD,EAAQ;IAClBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;IACA,MAAMC,cAAc,GAAG,KAAKR,KAAL,CAAWH,MAAX,CAAkBY,MAAlB,CAAyBZ,MAAM,IAAI;MACtD,OAAOA,MAAM,CAACa,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKZ,KAAL,CAAWC,WAAX,CAAuBU,WAAvB,EAAnC,CAAP;IACH,CAFsB,CAAvB;EAGH;;EAEDE,MAAM,GAAI;IACN,oBACI;MAAK,SAAS,EAAC,IAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAW,YAAY,EAAE,KAAKX;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,QAAD;QAAU,MAAM,EAAE,KAAKF,KAAL,CAAWH;MAA7B;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOC;;AAxBmB;;AA2B5B,eAAeC,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}